<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Amirhossein Movahedi]]></title><description><![CDATA[I belong to no religion, my religion is LOVE and every heart is my Temple (Rumi)]]></description><link>https://amir.red-gold.tech</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 23 Dec 2019 13:12:28 GMT</lastBuildDate><item><title><![CDATA[Telar Social Media Architecture using Domain Driven Design for Microservices]]></title><description><![CDATA[In this Article you will learn about Telar Social Architecture and how it helps to boost your productivity, development Speed, flexibility, scalability and so on. We are not going deep in DDD and Microservices but how we used them in Telar Social in a nutshell.]]></description><link>https://amir.red-gold.tech/posts/Telar-Social-Media-Architecture-using-Domain-Driven-Design-for-Microservices</link><guid isPermaLink="false">https://amir.red-gold.tech/posts/Telar-Social-Media-Architecture-using-Domain-Driven-Design-for-Microservices</guid><pubDate>Sun, 22 Dec 2019 22:40:32 GMT</pubDate><content:encoded>&lt;h3 id=&quot;what-is-microservice&quot;&gt;&lt;a href=&quot;#what-is-microservice&quot; aria-label=&quot;what is microservice permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is microservice&lt;/h3&gt;
&lt;p&gt;It’s a system design style that break your system to small independent microservices.&lt;/p&gt;
&lt;h3 id=&quot;microservice-advantages&quot;&gt;&lt;a href=&quot;#microservice-advantages&quot; aria-label=&quot;microservice advantages permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microservice advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Easier to build and maintain project.&lt;/li&gt;
&lt;li&gt;Smaller and faster deployments.&lt;/li&gt;
&lt;li&gt;High scalability.&lt;/li&gt;
&lt;li&gt;Low impact on other services with isolation. &lt;/li&gt;
&lt;li&gt;Freedom to choose technology. &lt;/li&gt;
&lt;li&gt;Improve team productivity.
and more advantages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;domain-driven-design-for-microservices&quot;&gt;&lt;a href=&quot;#domain-driven-design-for-microservices&quot; aria-label=&quot;domain driven design for microservices permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain Driven Design for Microservices&lt;/h3&gt;
&lt;p&gt;Domain-Driven Design (DDD)—a design approach where the business domain is carefully modeled in software and evolved over time, independently. It used to build systems that have a complex business domain.&lt;/p&gt;
&lt;h3 id=&quot;microservice-communication-in-telar-social&quot;&gt;&lt;a href=&quot;#microservice-communication-in-telar-social&quot; aria-label=&quot;microservice communication in telar social permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microservice Communication in Telar Social&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Synchronous
Front of each microservice is a Rest API. The client sends a request and waits for a response from the service. That’s independent of the client code execution that could be synchronous (thread is blocked) or asynchronous (thread isn’t blocked, and the response will reach a callback eventually). The important point here is that the protocol (HTTP/HTTPS) is synchronous and the client code can only continue its task when it receives the HTTP server response.&lt;/li&gt;
&lt;li&gt;Asynchronous Message Queuing
In this system, messages are persisted in a queue. One or more consumers can consume the messages in the queue, but a particular message can be consumed by a maximum of one consumer only. Once a consumer reads a message in the queue, it disappears from that queue. If there are no consumers available at the time the message is sent, it will be kept until a consumer is available that can process the message.&lt;/li&gt;
&lt;li&gt;Asynchronous Publish subscribe &lt;strong&gt;(Enterprise Edition)&lt;/strong&gt;
In the publish-subscribe system, messages are persisted in a topic. Consumers can subscribe to one or more topics and consume all the messages in that topic. In the Publish-Subscribe system, message producers are called publishers and message consumers are called subscribers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;telar-social-microservice-architecture&quot;&gt;&lt;a href=&quot;#telar-social-microservice-architecture&quot; aria-label=&quot;telar social microservice architecture permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Telar Social Microservice Architecture&lt;/h3&gt;
&lt;p&gt;In Telar Social following best practice architecture, Following this architecture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We can have different team with different technologies, different programming language and base on different &lt;/li&gt;
&lt;li&gt;We can config auto scaling for each microservice base on the metrics (like network traffic) to be specific for that microserice. By that we optimize resource usage and reduce the cost.&lt;/li&gt;
&lt;li&gt;In the case if a microservice crashes, other microservice continue their job giving service to the clients. &lt;/li&gt;
&lt;li&gt;Kubernetes do periodic checks on the health state of each microservice. If a microsevice fails consecutive health checks over an extended time period, Kubernetes initiates a repair process for that microservice.&lt;/li&gt;
&lt;li&gt;Change and maintain a microservice without influencing on other microservices. &lt;/li&gt;
&lt;li&gt;Each miroservice configuration is separated to different config file which is accessile via &lt;code class=&quot;language-text&quot;&gt;config&lt;/code&gt; directory from project root directory. Specially for &lt;code class=&quot;language-text&quot;&gt;Enterprice&lt;/code&gt; you can use different database for each microservice base on your business domain.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Community Edition Design on Kubernetes&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;  Users  -&amp;gt;  {User Authundefined User Profileundefined User Authentication}  
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;  Social -&amp;gt;  {Circlesundefined User Relations}                                
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Actions                                                                                          
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Admin                                                                                          
 Client  &amp;lt;|&amp;gt; API Gateway    &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Posts                                                             
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Comments                                                                                          
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Votes                                                             
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Gallery                                                              
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Notifications                                                                                          
         &amp;lt;|&amp;gt;                &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;             Storage   &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;Client Send a synchronous request to API Gateway and waiting for the response from microservice.&lt;/li&gt;
&lt;li&gt;Client/Microservice Send an asynchronous request to API Gateway and pushing in the queue. In this method user do not wait for the response any more. After microservice is done with the job will call Action microservice(or other microservices) . Action microservice will send the appropriate action to UI dispatcher to update the user interface. (To learn more about Action Microservice read &lt;a href=&quot;&quot;&gt;Flux Pattern for Server-Client interaction in Telar Social&lt;/a&gt; article)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enterprise Edition Design  on Kubernetes&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;  Users  {User Authundefined User Profileundefined User Authentication}  
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;  Social {Circlesundefined User Relations}                                
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Admin                                                                                          
         &amp;lt;|&amp;gt; API Gateway  &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Posts                                                             
  Client &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Comments                                                                                          
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Votes                                                             
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Gallery                                                              
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Notifications                                                                                          
         &amp;lt;|&amp;gt;              &amp;lt;|&amp;gt;  Rest API   &amp;lt;|&amp;gt;         Storage                                                           

&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database                       
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database 
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database 
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database 
&amp;lt;|&amp;gt;   Action Pub/Sub  &amp;lt;|&amp;gt;  Database
&amp;lt;|&amp;gt;  (Message Broker) &amp;lt;|&amp;gt;  Database
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database
&amp;lt;|&amp;gt;                   &amp;lt;|&amp;gt;  Database&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Communication
For &lt;strong&gt;Enterprise Edition&lt;/strong&gt;, in addition to &lt;strong&gt;Community Edition&lt;/strong&gt; communication, we provided &lt;code class=&quot;language-text&quot;&gt;Pub/Sub&lt;/code&gt; using &lt;code class=&quot;language-text&quot;&gt;Kafka&lt;/code&gt;. Microservices are subscribing to &lt;code class=&quot;language-text&quot;&gt;Kafka topics&lt;/code&gt;and when a message received the function will be executed handling the message. In this pattern a message can be consumed with many functions at the same time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;directory-structure-server-side&quot;&gt;&lt;a href=&quot;#directory-structure-server-side&quot; aria-label=&quot;directory structure server side permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directory Structure (server-side)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;: Including core operations on Telar Social. We keep the src/core as the most stable layer that other layers use in common.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt; : The Controller handle any incoming request from API Gateway. Controllers including functions called &lt;code class=&quot;language-text&quot;&gt;handler&lt;/code&gt; which handles incoming browser requests, retrieves necessary model data and returns appropriate responses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;: Do the data operations on your domain.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web&lt;/strong&gt;: Including Telar Social frontend using ReactJS.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;root-directory
├── src
│   ├── core
│   │   ├── config
│   │   ├── data
│   │   │   ├── Client-DB
│   │   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   │   ├── server
│   │   ├── utils
│   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   ├── domain
│   │   ├── domain-name-1
│   │   ├── domain-name-2
│   │   │   ├── sub-domain-name-1
│   │   │   ├── sub-domain-name-2
│   │   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   ├── constants
│   ├── controllers
│   │   ├── domain-name-1
│   │   │   ├── handlers
│   │   │   ├── config
│   │   │   └── vendor
│   │   ├── domain-name-2
│   │   │   ├── sub-domain-name-1
│   │   │   │   ├── handlers
│   │   │   │   ├── config
│   │   │   │   └── vendor
│   │   │   ├── sub-domain-name-2
│   │   │   │   ├── handlers
│   │   │   │   ├── config
│   │   │   │   └── vendor
│   │   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   ├── models
│   │   ├── domain-name-1
│   │   ├── domain-name-2
│   │   │   ├── sub-domain-name-1
│   │   │   ├── sub-domain-name-2
│   │   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   ├── services
│   │   ├── domain-name-1
│   │   ├── domain-name-2
│   │   │   ├── sub-domain-name-1
│   │   │   ├── sub-domain-name-2
│   │   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   │   └── &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
│   └── web
│       ├── ts-front-end
│       └── ts-ui
│── config
└── playground&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;originally-published-on-medium&quot;&gt;&lt;a href=&quot;#originally-published-on-medium&quot; aria-label=&quot;originally published on medium permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Originally published on &lt;a href=&quot;https://medium.com/red-gold/telar-social-media-architecture-using-domain-driven-design-for-microservices-319c514199e4&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Medium&lt;/a&gt;.&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Easy steps from OpenFaaS to your own Telar Social Media on Cloud]]></title><description><![CDATA[By the end of this article you have your own [Telar Social](https://telar.press) media up and running using OpenFaaS on OpenFaaS Cloud through some easy steps in a nutshell.]]></description><link>https://amir.red-gold.tech/posts/Easy-steps-from-OpenFaaS-to-your-own-Telar-Social-Media-on-Cloud</link><guid isPermaLink="false">https://amir.red-gold.tech/posts/Easy-steps-from-OpenFaaS-to-your-own-Telar-Social-Media-on-Cloud</guid><pubDate>Sat, 21 Dec 2019 22:40:32 GMT</pubDate><content:encoded>&lt;h2 id=&quot;who-is-this-project-for&quot;&gt;&lt;a href=&quot;#who-is-this-project-for&quot; aria-label=&quot;who is this project for permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who is this project for&lt;/h2&gt;
&lt;p&gt;If you are looking for a social media…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Designed for different purpose, social network, social review, image sharing, video sharing, community blog, discussion or sharing economy network&lt;/li&gt;
&lt;li&gt;Easy to setup and develop.&lt;/li&gt;
&lt;li&gt;Open source.&lt;/li&gt;
&lt;li&gt;Running on public cloud, private cloud or on premises.&lt;/li&gt;
&lt;li&gt;Built base on Domain Driven Design architecture for microservice/cloud functions.&lt;/li&gt;
&lt;li&gt;Running on Kubernetes.&lt;/li&gt;
&lt;li&gt;High performance and at scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;why-openfaas&quot;&gt;&lt;a href=&quot;#why-openfaas&quot; aria-label=&quot;why openfaas permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why OpenFaaS&lt;/h2&gt;
&lt;p&gt;OpenFaaS makes it easy for developers to deploy functions and microservices to Kubernetes without repetitive, boiler-plate coding. Package your code or an existing binary in a Docker image to get a highly scalable endpoint with auto-scaling and metrics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write functions in any language for Linux or Windows and package in Docker/OCI image format.&lt;/li&gt;
&lt;li&gt;Portable - runs on existing hardware or public/private cloud - Kubernetes and Docker Swarm native.&lt;/li&gt;
&lt;li&gt;Auto-scales as demand increases.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;why-run-the-project-on-openfaas-cloud&quot;&gt;&lt;a href=&quot;#why-run-the-project-on-openfaas-cloud&quot; aria-label=&quot;why run the project on openfaas cloud permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why run the project on OpenFaaS Cloud&lt;/h2&gt;
&lt;p&gt; OpenFaaS Cloud introduces an automated build and management system for your Serverless functions with native integrations into your source-control management system whether that is GitHub or GitLab.&lt;/p&gt;
&lt;p&gt;With OpenFaaS Cloud functions are managed through typing git push which reduces the tooling and learning curve required to operate functions for your team. As soon as OpenFaaS Cloud receives a push event from git it will run through a build-workflow which clones your repo, builds a Docker image, pushes it to a registry and then deploys your functions to your cluster. Each user can access and monitor their functions through their personal dashboard.&lt;/p&gt;
&lt;h2 id=&quot;ingredients-&quot;&gt;&lt;a href=&quot;#ingredients-&quot; aria-label=&quot;ingredients  permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ingredients 🍲🍜&lt;/h2&gt;
&lt;p&gt;For running this project (for Development purpose) all the ingredients have free usage plan to test the project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openfaas/faas-cli#get-started-install-the-cli&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;OpenFaaS CLI&lt;/a&gt; installed on your computer. (Framework)&lt;/li&gt;
&lt;li&gt;Access to the &lt;a href=&quot;https://github.com/openfaas/community-cluster&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;OpenFaaS Cloud: Community Cluster&lt;/a&gt;, or your own self-hosted cluster with &lt;a href=&quot;https://github.com/openfaas-incubator/ofc-bootstrap&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;ofc-bootstrap&lt;/a&gt;. (Cloud)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;MongoDB&lt;/a&gt; database connection string and password. (Database)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heroku.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Heroku&lt;/a&gt; account. (Websocket server)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://account.google.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Google&lt;/a&gt; account. (Firebase Storage and Recaptcha)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://redislabs.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Redislabs&lt;/a&gt; account. (Caching data)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;get-started&quot;&gt;&lt;a href=&quot;#get-started&quot; aria-label=&quot;get started permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started🏃🏻&lt;/h2&gt;
&lt;p&gt;After you have your ingredients ready, we will start to setup Telar Social on OpenFaaS cloud.&lt;/p&gt;
&lt;h2 id=&quot;clone-telar-social-on-your-computer&quot;&gt;&lt;a href=&quot;#clone-telar-social-on-your-computer&quot; aria-label=&quot;clone telar social on your computer permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone Telar Social on your computer&lt;/h2&gt;
&lt;p&gt;Telar social including :
&lt;strong&gt;Telar Web&lt;/strong&gt; designed for handling authentication, notifications, realtime actions, file storage and admin services.
&lt;strong&gt;Telar Social Serverless&lt;/strong&gt; handling posts, comments, votes, social community and media services.
&lt;strong&gt;Telar Social User Interface&lt;/strong&gt; is the frontend that using ReactJS. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You need to clone these three repositories on your computer following blow instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;clone-telar-web&quot;&gt;&lt;a href=&quot;#clone-telar-web&quot; aria-label=&quot;clone telar web permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone Telar Web&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fork the &lt;a href=&quot;https://github.com/red-gold/telar-web&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;telar-web&lt;/a&gt; repository on Github for you account.&lt;/li&gt;
&lt;li&gt;Clone your fork to your local machine. Replace &lt;code class=&quot;language-text&quot;&gt;[your_github_username]&lt;/code&gt; with your github username.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git clone git@github.com:[your_github_username]/telar-web.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;clone-telar-social-serverless&quot;&gt;&lt;a href=&quot;#clone-telar-social-serverless&quot; aria-label=&quot;clone telar social serverless permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone Telar Social Serverless&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fork the &lt;a href=&quot;https://github.com/red-gold/ts-serverless&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;ts-serverless&lt;/a&gt; repository on Github for you account.&lt;/li&gt;
&lt;li&gt;Clone your fork to your local machine. Replace &lt;code class=&quot;language-text&quot;&gt;[your_github_username]&lt;/code&gt; with your github username.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git clone git@github.com:[your_github_username]/ts-serverless.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;clone-telar-social-user-interface&quot;&gt;&lt;a href=&quot;#clone-telar-social-user-interface&quot; aria-label=&quot;clone telar social user interface permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clone Telar Social User Interface&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fork the &lt;a href=&quot;https://github.com/red-gold/ts-ui&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;ts-ui&lt;/a&gt; repository on Github for you account.&lt;/li&gt;
&lt;li&gt;Clone your fork to your local machine. Replace &lt;code class=&quot;language-text&quot;&gt;[your_github_username]&lt;/code&gt; with your github username.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git clone git@github.com:[your_github_username]/ts-ui.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;enable-cicd-for-repositories&quot;&gt;&lt;a href=&quot;#enable-cicd-for-repositories&quot; aria-label=&quot;enable cicd for repositories permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enable CI/CD for repositories&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to your Github account setting and Installed GitHub Apps, click on OpenFaaS Cloud Community Cluster Config button&lt;/li&gt;
&lt;li&gt;From repository access choose &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ts-serverless&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ts-ui&lt;/code&gt; repositories.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;openfaas-cloud-configuration&quot;&gt;&lt;a href=&quot;#openfaas-cloud-configuration&quot; aria-label=&quot;openfaas cloud configuration permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFaaS Cloud configuration&lt;/h2&gt;
&lt;p&gt;You need set your &lt;code class=&quot;language-text&quot;&gt;Github username&lt;/code&gt; which you registered for OpenFaaS Cloud: Community Cluster account in  .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From &lt;code class=&quot;language-text&quot;&gt;root&lt;/code&gt; of &lt;code class=&quot;language-text&quot;&gt;ts-serverless&lt;/code&gt; project go to &lt;code class=&quot;language-text&quot;&gt;config&lt;/code&gt; directory. Open app &lt;code class=&quot;language-text&quot;&gt;gateway_config.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace your &lt;code class=&quot;language-text&quot;&gt;Github username&lt;/code&gt; with &lt;code class=&quot;language-text&quot;&gt;[your_github_username]&lt;/code&gt; in :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gateway: ”&lt;a href=&quot;https://%5Byour_github_username%5D.o6s.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your_github_username].o6s.io&lt;/a&gt;”&lt;/li&gt;
&lt;li&gt;origin: ”&lt;a href=&quot;https://%5Byour_github_username%5D.o6s.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your_github_username].o6s.io&lt;/a&gt;”&lt;/li&gt;
&lt;li&gt;web&lt;em&gt;domain: ”&lt;a href=&quot;https://%5Byour&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your&lt;/a&gt;&lt;/em&gt;github_username].o6s.io”&lt;/li&gt;
&lt;li&gt;external&lt;em&gt;domain: ”&lt;a href=&quot;https://%5Byour&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your&lt;/a&gt;&lt;/em&gt;github_username].o6s.io”&lt;/li&gt;
&lt;li&gt;cookie&lt;em&gt;root&lt;/em&gt;domain: “.o6s.io”&lt;/li&gt;
&lt;li&gt;external&lt;em&gt;redirect&lt;/em&gt;domain: ”&lt;a href=&quot;https://%5Byour_github_username%5D.o6s.io/auth&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your_github_username].o6s.io/auth&lt;/a&gt;”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;code class=&quot;language-text&quot;&gt;https://[your-github-username].o6s.io/&lt;/code&gt;. In my case the &lt;code class=&quot;language-text&quot;&gt;[your-github-username]&lt;/code&gt; is red-gold (&lt;code class=&quot;language-text&quot;&gt;https://red-gold.o6s.io/&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do the same for &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; project too.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;prerequire-for-creating-secret-file-&quot;&gt;&lt;a href=&quot;#prerequire-for-creating-secret-file-&quot; aria-label=&quot;prerequire for creating secret file  permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequire for creating secret file 🙊&lt;/h3&gt;
&lt;p&gt;There is a great feature in &lt;code class=&quot;language-text&quot;&gt;faas-cli&lt;/code&gt; which you can encrypt/seal secrets so that you can publish it to your public GitHub repository.
Each secret use a public key to be sealed. As we are using &lt;code class=&quot;language-text&quot;&gt;OpenFaaS Cloud: Community Cluster&lt;/code&gt; we need to use community cluster public key to seal the secret.
To seal your secret &lt;code class=&quot;language-text&quot;&gt;faas-cli&lt;/code&gt; is using &lt;a href=&quot;https://github.com/bitnami-labs/sealed-secrets&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;kubeseal&lt;/a&gt;. Following &lt;a href=&quot;https://github.com/openfaas/faas-cli#openfaas-cloud-extensions&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;document&lt;/a&gt; to install kubeseal.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;faas-cli cloud seal --download&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download the official OpenFaaS Cloud certificate.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt; kubeseal --fetch-cert --controller-name ofc-sealedsecrets-sealed-secrets &amp;gt; pub-cert.pem&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;other-configurations&quot;&gt;&lt;a href=&quot;#other-configurations&quot; aria-label=&quot;other configurations permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other configurations&lt;/h2&gt;
&lt;p&gt;Open a text file, following blow environment variables, replace &lt;code class=&quot;language-text&quot;&gt;[your_{variable}]&lt;/code&gt; with your variable value through the steps:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;MONGO_PWD=[your_mongodb_password] RECAPTCHA_KEY=[your_recaptcha_key] CLIENT_SECRET=[your_github_client_secret] REDIS_PWD=&amp;#39;no-value&amp;#39; ADMIN_USERNAME=[your_admin_username] ADMIN_PASSWORD=[your_admin_password] PAYLOAD_SECRET=[your_payload_secret] REF_EMAIL_PASS=[your_email_password] PHONE_AUTH_TOKEN=&amp;#39;no-value&amp;#39; PHONE_AUTH_ID=&amp;#39;no-value&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Create an internal trust secret
This secret will be used by each when a function calls another function internally.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;PAYLOAD_SECRET=$(head -c 12 /dev/urandom | shasum| cut -d&amp;#39; &amp;#39; -f1)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Create a &lt;a href=&quot;https://firebase.google.com/docs/storage&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Firebase Storage&lt;/a&gt; secret.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6juww5Lmvgo&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Create a new project in Firebase.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/storage/web/start#create-default-bucket&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Create a default Storage bucket&lt;/a&gt;. From the navigation pane of the Firebase console, select Storage, then click Get started.&lt;/li&gt;
&lt;li&gt;In the Firebase console, open Settings &gt; &lt;a href=&quot;https://console.firebase.google.com/project/_/settings/serviceaccounts/adminsdk&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Service Accounts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click Generate New Private Key, then confirm by clicking Generate Key.&lt;/li&gt;
&lt;li&gt;Aftar download, change the file name to &lt;code class=&quot;language-text&quot;&gt;serviceAccountKey.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy &lt;code class=&quot;language-text&quot;&gt;serviceAccountKey.json&lt;/code&gt; file in the &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; root directory.&lt;/li&gt;
&lt;li&gt;Set the bucket name(bucket&lt;em&gt;name) in `telar-web/config/storage&lt;/em&gt;config.yml&lt;code class=&quot;language-text&quot;&gt;file to your firebase bucket name. Following pattern&lt;/code&gt;[your&lt;em&gt;firebase&lt;/em&gt;project_name].appspot.com&lt;code class=&quot;language-text&quot;&gt;in my case my project name is&lt;/code&gt;resume-web-app&lt;code class=&quot;language-text&quot;&gt;so the bucket name will be&lt;/code&gt;resume-web-app.appspot.com`.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.atlas.mongodb.com/getting-started/#deploy-a-free-tier-cluster&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Create a cluster and database on Mongodb cloud&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;From root of &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; project go to &lt;code class=&quot;language-text&quot;&gt;config&lt;/code&gt; directory. Open app &lt;code class=&quot;language-text&quot;&gt;app_config.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Set &lt;code class=&quot;language-text&quot;&gt;mongo_user&lt;/code&gt; field same as mongo user you created in mongodb cloud.&lt;/li&gt;
&lt;li&gt;Replace &lt;code class=&quot;language-text&quot;&gt;[your_mongodb_password]&lt;/code&gt; in text file for environment variables.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;MONGO_PWD=[your_mongodb_password]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Enable &lt;a href=&quot;https://www.google.com/recaptcha/intro/v3.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Google reCAPTCHA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code class=&quot;language-text&quot;&gt;Admin console&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;In label field, input &lt;code class=&quot;language-text&quot;&gt;telar social&lt;/code&gt;. Choose &lt;code class=&quot;language-text&quot;&gt;reCAPTCHA v2&lt;/code&gt; from &lt;code class=&quot;language-text&quot;&gt;reCAPTCHA type&lt;/code&gt;. Add your domain &lt;code class=&quot;language-text&quot;&gt;[your-github-username].o6s.io&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;Domains&lt;/code&gt; field and click on&lt;code class=&quot;language-text&quot;&gt;+&lt;/code&gt; button.In my case the &lt;code class=&quot;language-text&quot;&gt;[your-github-username]&lt;/code&gt; is red-gold (&lt;code class=&quot;language-text&quot;&gt;red-gold.o6s.io&lt;/code&gt;). &lt;/li&gt;
&lt;li&gt;Enable &lt;code class=&quot;language-text&quot;&gt;Accept the reCAPTCHA Terms of Service&lt;/code&gt; and click on &lt;code class=&quot;language-text&quot;&gt;submit&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;Copy &lt;code class=&quot;language-text&quot;&gt;site key&lt;/code&gt; and set &lt;code class=&quot;language-text&quot;&gt;recaptcha_site_key&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;config/app_config.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Replace [your&lt;em&gt;recaptcha&lt;/em&gt;key] in text file for environment variables.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;RECAPTCHA_KEY=[your_recaptcha_key]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Following &lt;a href=&quot;https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Github instruction&lt;/a&gt; create an oauth app. Be sure to set &lt;code class=&quot;language-text&quot;&gt;Authorization callback URL&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;https://[your_github_username].o6s.io/auth&lt;/code&gt; in my case &lt;code class=&quot;language-text&quot;&gt;https://red-gold.o6s.io/auth&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy you oauth app client id and set &lt;code class=&quot;language-text&quot;&gt;client_id&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;telar-web/config/storage_config.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Replace [your&lt;em&gt;github&lt;/em&gt;client_secret] in text file for environment variables.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CLIENT_SECRET=[your_github_client_secret]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Generate a key/pair.
This key/pair is used to sign the JWT and then verify it later. &lt;/li&gt;
&lt;li&gt;To generate private key run below command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;openssl ecparam -genkey -name prime256v1 -noout -out key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To generate public key&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;openssl ec -in key -pubout -out key.pub&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Set email for sending signup/reset password verfication code.&lt;/li&gt;
&lt;li&gt;Set &lt;code class=&quot;language-text&quot;&gt;ref_email&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;telar-web/config/app_config.yml&lt;/code&gt; file to your email.&lt;/li&gt;
&lt;li&gt;Replace [your&lt;em&gt;email&lt;/em&gt;password] in text file for environment variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;REF_EMAIL_PASS=[your_email_password]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;Replace your admin account username and password in environment variables file.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ADMIN_USERNAME=[your_admin_username]
ADMIN_PASSWORD=[your_admin_password]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;
&lt;p&gt;After setting all the secrets in environment variables, using terminal, in the root of &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; project enter all variables.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;MONGO_PWD=[your_mongofb_password] RECAPTCHA_KEY=[your_recaptcha_key] CLIENT_SECRET=[your_github_client_secret] REDIS_PWD=&amp;#39;no-value&amp;#39; ADMIN_USERNAME=[your_admin_username] ADMIN_PASSWORD=[your_admin_password] PAYLOAD_SECRET=[your_payload_secret] REF_EMAIL_PASS=[your_email_password] PHONE_AUTH_TOKEN=&amp;#39;no-value&amp;#39; PHONE_AUTH_ID=&amp;#39;no-value&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From terminal and in the root directory of &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; project enter blow command. Replace &lt;code class=&quot;language-text&quot;&gt;[you_github_user_name]-secrets&lt;/code&gt; with you Github username in my case &lt;code class=&quot;language-text&quot;&gt;red-gold-secrets&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;faas-cli cloud seal --name red-gold-secrets \
--literal mongo-pwd=&amp;quot;$MONGO_PWD&amp;quot; --literal recaptcha-key=&amp;quot;$RECAPTCHA_KEY&amp;quot; \
--from-file=&amp;quot;key&amp;quot; --from-file=&amp;quot;key.pub&amp;quot; --from-file=&amp;quot;serviceAccountKey.json&amp;quot; \
--literal ts-client-secret=&amp;quot;$CLIENT_SECRET&amp;quot; --literal redis-pwd=&amp;quot;$REDIS_PWD&amp;quot; \
--literal admin-username=&amp;quot;$ADMIN_USERNAME&amp;quot; \
--literal admin-password=&amp;quot;$ADMIN_PASSWORD&amp;quot; --literal payload-secret=&amp;quot;$PAYLOAD_SECRET&amp;quot; \
--literal ref-email-pass=&amp;quot;$REF_EMAIL_PASS&amp;quot; --literal phone-auth-token=&amp;quot;$PHONE_AUTH_TOKEN&amp;quot; \
--literal phone-auth-id=&amp;quot;$PHONE_AUTH_ID&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; Check the &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; root directory, you should see &lt;code class=&quot;language-text&quot;&gt;secrets.yml&lt;/code&gt; file. Copy this file in &lt;code class=&quot;language-text&quot;&gt;ts-serverless&lt;/code&gt; root directory too.&lt;/p&gt;
&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;
&lt;p&gt;Enable realtime data for user chat, notification and actions.
We are using &lt;a href=&quot;https://socket.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;socket.io&lt;/a&gt; to handle realtime data. We provided a websocket server running on Heroku. Setup websocket server following bellow steps. We assumed you have Heroku account logged in already.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://github.com/Qolzam/ts-websocket&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;ts-websocket&lt;/a&gt; repository and click on &lt;code class=&quot;language-text&quot;&gt;Deploy to Heroku&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You will be redirected to &lt;code class=&quot;language-text&quot;&gt;Heroku&lt;/code&gt; website. Type your app name and click on &lt;code class=&quot;language-text&quot;&gt;Deploy app&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click on &lt;code class=&quot;language-text&quot;&gt;Manage App&lt;/code&gt; then click on &lt;code class=&quot;language-text&quot;&gt;Settings&lt;/code&gt; tab. Find &lt;code class=&quot;language-text&quot;&gt;Config Vars&lt;/code&gt; and click on &lt;code class=&quot;language-text&quot;&gt;Reveal Config Vars&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add following Key/Value in your app.&lt;/li&gt;
&lt;li&gt;Key: &lt;code class=&quot;language-text&quot;&gt;GATEWAY&lt;/code&gt; , Value: &lt;a href=&quot;https://%5Byour-github-username%5D.o6s.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your-github-username].o6s.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key: &lt;code class=&quot;language-text&quot;&gt;PAYLOAD_SECRET&lt;/code&gt; , Value: &lt;code class=&quot;language-text&quot;&gt;your_payload_secret&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Key: &lt;code class=&quot;language-text&quot;&gt;PRETTY_URL&lt;/code&gt; , Value:  &lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify your app using &lt;code class=&quot;language-text&quot;&gt;https://[your_heroku_app_name].herokuapp.com/ping&lt;/code&gt;. You should recevice &lt;code class=&quot;language-text&quot;&gt;success: true&lt;/code&gt; which means your websocket server is running.&lt;/li&gt;
&lt;li&gt;From &lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt; root directory, go to config folder and open &lt;code class=&quot;language-text&quot;&gt;gateway_config.yml&lt;/code&gt; file. Set &lt;code class=&quot;language-text&quot;&gt;websocket_server_url&lt;/code&gt; variable to &lt;code class=&quot;language-text&quot;&gt;https://[your_heroku_app_name].herokuapp.com&lt;/code&gt; . Replace &lt;code class=&quot;language-text&quot;&gt;[your_heroku_app_name]&lt;/code&gt; with your app name in heroku.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;deploy-telar-social&quot;&gt;&lt;a href=&quot;#deploy-telar-social&quot; aria-label=&quot;deploy telar social permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy Telar Social🎯&lt;/h2&gt;
&lt;p&gt;From terminal go to the root of each project (&lt;code class=&quot;language-text&quot;&gt;telar-web&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ts-serverless&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ts-ui&lt;/code&gt;) and run command blow.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git add . &amp;amp;&amp;amp; git commit -sm &amp;#39;Deploy Telar Social.&amp;#39; &amp;amp;&amp;amp; git push&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It may takes some minutes to deploy functions running on OpenFaaS Cloud: Community Cluster. You are able to check &lt;a href=&quot;https://docs.openfaas.com/openfaas-cloud/user-guide/#check-the-status-of-the-build&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;the build status&lt;/a&gt; from your github repository or from &lt;a href=&quot;https://openfaas.slack.com/archives/CAN60NKBM&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;OpenFaaS slack channel&lt;/a&gt;. When the build and deployment is done, you can access to Telar Social using &lt;code class=&quot;language-text&quot;&gt;https://[your-github-username].o6s.io/&lt;/code&gt;,in my case the [your-github-username] is red-gold &lt;code class=&quot;language-text&quot;&gt;https://red-gold.o6s.io/admin&lt;/code&gt;. Click on start to start the project.&lt;/p&gt;
&lt;p&gt;To start go &lt;a href=&quot;https://%5Byour-github-username%5D.o6s.io/auth/admin/login&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://[your-github-username].o6s.io/auth/admin/login&lt;/a&gt; page. Wait until you seen welcome page.&lt;/p&gt;
&lt;p&gt;Now your Telar social is ready to use!😍🏆&lt;/p&gt;
&lt;h3 id=&quot;access-pages&quot;&gt;&lt;a href=&quot;#access-pages&quot; aria-label=&quot;access pages permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Access pages:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Signup page: &lt;code class=&quot;language-text&quot;&gt;https://[your-github-username].o6s.io/auth/signup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Login page: &lt;code class=&quot;language-text&quot;&gt;https://[your-github-username].o6s.io/auth/login&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;originally-published-on-medium&quot;&gt;&lt;a href=&quot;#originally-published-on-medium&quot; aria-label=&quot;originally published on medium permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Originally published on &lt;a href=&quot;https://medium.com/red-gold/mail-from-slack-by-openfaas-6eeee2228cec&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Medium&lt;/a&gt;.&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Mail from Slack by OpenFaaS Cloud]]></title><description><![CDATA[In this tutorial I want to show you how I built a function to send emails from a Slack command. It runs for free on OpenFaaS Cloud using the Community Cluster.]]></description><link>https://amir.red-gold.tech/posts/Mail-from-Slack-by-OpenFaaS-Cloud</link><guid isPermaLink="false">https://amir.red-gold.tech/posts/Mail-from-Slack-by-OpenFaaS-Cloud</guid><pubDate>Sat, 31 Aug 2019 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;In this tutorial I want to show you how I built a function to send emails from a Slack command. It runs for free on OpenFaaS Cloud using the Community Cluster.&lt;/p&gt;
&lt;h2 id=&quot;openfaas&quot;&gt;&lt;a href=&quot;#openfaas&quot; aria-label=&quot;openfaas permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFaaS&lt;/h2&gt;
&lt;p&gt;OpenFaaS (Function as a service) is a framework for creating serverless functions on Kubernetes or Docker. It made serverless functions simple. You can run OpenFaaS anywhere on your laptop, your own premise hardware or create a cluster in the cloud. OpenFaaS supporting any language such as GO, Java, Python, C#, Ruby , ASP.NET Core or anything else.
If you are new with OpenFaaS workshop is a great place to start.To learn more about OpenFaaS please checkout the project documentation.&lt;/p&gt;
&lt;h2 id=&quot;openfaas-cloud&quot;&gt;&lt;a href=&quot;#openfaas-cloud&quot; aria-label=&quot;openfaas cloud permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFaaS Cloud&lt;/h2&gt;
&lt;p&gt;Run you serverless functions using automates CI/CD. You are able to run OpenFaaS cloud self-hosted or use the hosted Community Cluster.&lt;/p&gt;
&lt;h2 id=&quot;pre-requisites&quot;&gt;&lt;a href=&quot;#pre-requisites&quot; aria-label=&quot;pre requisites permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-requisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Access to the OpenFaaS Cloud: Community Cluster, or your own self-hosted cluster with ofc-bootstrap.&lt;/li&gt;
&lt;li&gt;Slack Account.&lt;/li&gt;
&lt;li&gt;You already have faas-cli installed.&lt;/li&gt;
&lt;li&gt;You have an GitHub repository connected to OpenFaaS Cloud: Community Cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;scenario&quot;&gt;&lt;a href=&quot;#scenario&quot; aria-label=&quot;scenario permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scenario&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Using Slash Command in Slack to send message to an API.&lt;/li&gt;
&lt;li&gt;Use OpenFaaS function as API to receive message from Slack.&lt;/li&gt;
&lt;li&gt;Verifying Slack message HMAC.&lt;/li&gt;
&lt;li&gt;Extract the message.&lt;/li&gt;
&lt;li&gt;Convert message body from Markdown to HTML.&lt;/li&gt;
&lt;li&gt;Send email using nodemailer.&lt;/li&gt;
&lt;li&gt;Send back appropriate message to Slack.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;continue-reading-on-medium&quot;&gt;&lt;a href=&quot;#continue-reading-on-medium&quot; aria-label=&quot;continue reading on medium permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continue reading on &lt;a href=&quot;https://medium.com/red-gold/mail-from-slack-by-openfaas-6eeee2228cec&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Medium&lt;/a&gt;.&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[OpenFaaS multi-stage with Istio on Kubernetes]]></title><description><![CDATA[In this post I want to show you how to Install OpenFaaS in multi-stage with Istio on Kubernetes and supporting cert-manager for SSL.]]></description><link>https://amir.red-gold.tech/posts/OpenFaaS-multi-stage-with-Istio-on-Kubernetes</link><guid isPermaLink="false">https://amir.red-gold.tech/posts/OpenFaaS-multi-stage-with-Istio-on-Kubernetes</guid><pubDate>Wed, 19 Jun 2019 22:40:32 GMT</pubDate><content:encoded>&lt;h2 id=&quot;openfaas&quot;&gt;&lt;a href=&quot;#openfaas&quot; aria-label=&quot;openfaas permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFaas&lt;/h2&gt;
&lt;p&gt;OpenFaaS (Function as a service) is a framework for creating server-less functions on Kubernetes or Docker. It made server-less functions simple. You can run OpenFaaS anywhere on your laptop, your own premise hardware or create a cluster in the cloud. OpenFaaS supporting any language such as GO, Java, Python, C#, Ruby , ASP.NET Core or anything else.
To learn more about OpenFaaS please refer to official document.&lt;/p&gt;
&lt;h2 id=&quot;istio&quot;&gt;&lt;a href=&quot;#istio&quot; aria-label=&quot;istio permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Istio&lt;/h2&gt;
&lt;p&gt;Istio is a platform used to interconnect microservices. It provides advanced network features like load balancing, service-to-service authentication, monitoring, etc, without requiring any changes in service code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please refer to Istio official document for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;pre-requires&quot;&gt;&lt;a href=&quot;#pre-requires&quot; aria-label=&quot;pre requires permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-requires&lt;/h2&gt;
&lt;p&gt;Basic knowledge about Kubernetes
Basic knowledge about Istio
Basic knowledge about OpenFaaS
Kubernetes cluster up and running
Install helm CLI/client
On Linux and Mac/Darwin:&lt;/p&gt;
&lt;h3 id=&quot;continue-reading-on-medium&quot;&gt;&lt;a href=&quot;#continue-reading-on-medium&quot; aria-label=&quot;continue reading on medium permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continue reading on &lt;a href=&quot;https://medium.com/red-gold/openfaas-multi-stage-with-istio-on-kubernetes-bf184d3b6955&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Medium&lt;/a&gt;.&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Create Social Network by ReactJS]]></title><description><![CDATA[Most of the time I have been trying to find a project in real world for ReactJS which support popular libraries and data platforms. I also needed to have a flexible structure to make reusable codes which give me the ability to use same code on React Native for mobile apps.]]></description><link>https://amir.red-gold.tech/posts/Create-Social-Network-by-ReactJS</link><guid isPermaLink="false">https://amir.red-gold.tech/posts/Create-Social-Network-by-ReactJS</guid><pubDate>Thu, 09 May 2019 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;Most of the time I have been trying to find a project in real world for ReactJS which support popular libraries and data platforms. I also needed to have a flexible structure to make reusable codes which give me the ability to use same code on React Native for mobile apps.
There are some cool stuff which I used in React Social Network such as Redux, Material-UI, redux-saga, InversifyJS, etc. which I would talk about through this blog. I will talk about my experience and issues which I faced with creating this project in a nutshell. Seems a long story, however I will try to update this blog every time is possible and add more.
Before starting if you are new to React I recommend you to take a look at &lt;a href=&quot;https://github.com/petehunt/react-howto&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;react-howto&lt;/a&gt; article and be sure you have general idea of React/React tools.&lt;/p&gt;
&lt;h3 id=&quot;continue-reading-on-medium&quot;&gt;&lt;a href=&quot;#continue-reading-on-medium&quot; aria-label=&quot;continue reading on medium permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continue reading on &lt;a href=&quot;https://medium.com/red-gold/create-social-network-by-react-js-fe60010a32e6&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Medium&lt;/a&gt;.&lt;/h3&gt;</content:encoded></item></channel></rss>